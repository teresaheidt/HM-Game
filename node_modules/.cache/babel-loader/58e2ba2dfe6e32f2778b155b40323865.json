{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lteresaheidt/Desktop/Code/bird_game/bird-game/src/Game.js\";\nimport React, { Component } from 'react';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gravity: 0.8,\n      bird: {\n        x: 50,\n        y: 250,\n        velocity: 0,\n        radius: 40\n      }\n    };\n\n    this.draw = () => {\n      const ctx = this.refs.canvas.getContext(\"2d\"); // change this colour to change the colour of your \n      // \"pen\" in the canvas \n\n      ctx.fillStyle = \"pink\";\n      ctx.fillStyle = \"white\";\n      ctx.fillRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n      ctx.beginPath();\n      ctx.arc(this.state.bird.x, this.state.bird.y, this.state.bird.radius, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n    };\n\n    this.update = () => {\n      let newV = (this.state.bird.velocity + this.state.gravity) * 0.9;\n      this.setState({\n        bird: {\n          x: 50,\n          y: Math.max(Math.min(this.state.bird.y + newV, this.refs.canvas.height - this.state.bird.radius), 0),\n          velocity: newV,\n          radius: 20\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.update();\n      this.draw();\n    }, 1000 / 60);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"canvas\",\n        width: 450,\n        height: 650\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/lteresaheidt/Desktop/Code/bird_game/bird-game/src/Game.js"],"names":["React","Component","Game","state","gravity","bird","x","y","velocity","radius","draw","ctx","refs","canvas","getContext","fillStyle","fillRect","width","height","beginPath","arc","Math","PI","fill","stroke","update","newV","setState","max","min","componentDidMount","setInterval","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBE,KADyB,GACjB;AACJC,MAAAA,OAAO,EAAE,GADL;AAEJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,CAAC,EAAE,EADD;AAEFC,QAAAA,CAAC,EAAE,GAFD;AAGFC,QAAAA,QAAQ,EAAE,CAHR;AAIFC,QAAAA,MAAM,EAAE;AAJN;AAFF,KADiB;;AAAA,SAW7BC,IAX6B,GAWtB,MAAM;AACT,YAAMC,GAAG,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,UAAjB,CAA4B,IAA5B,CAAZ,CADS,CAET;AACA;;AACAH,MAAAA,GAAG,CAACI,SAAJ,GAAgB,MAAhB;AACAJ,MAAAA,GAAG,CAACI,SAAJ,GAAgB,OAAhB;AACAJ,MAAAA,GAAG,CAACK,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAKJ,IAAL,CAAUC,MAAV,CAAiBI,KAApC,EACI,KAAKL,IAAL,CAAUC,MAAV,CAAiBK,MADrB;AAEAP,MAAAA,GAAG,CAACQ,SAAJ;AACAR,MAAAA,GAAG,CAACS,GAAJ,CAAQ,KAAKjB,KAAL,CAAWE,IAAX,CAAgBC,CAAxB,EAA2B,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,CAA3C,EACQ,KAAKJ,KAAL,CAAWE,IAAX,CAAgBI,MADxB,EACgC,CADhC,EACmC,IAAIY,IAAI,CAACC,EAD5C;AAEAX,MAAAA,GAAG,CAACY,IAAJ;AACAZ,MAAAA,GAAG,CAACa,MAAJ;AACH,KAxB4B;;AAAA,SA0B7BC,MA1B6B,GA0BpB,MAAM;AACX,UAAIC,IAAI,GAAG,CAAC,KAAKvB,KAAL,CAAWE,IAAX,CAAgBG,QAAhB,GAA2B,KAAKL,KAAL,CAAWC,OAAvC,IAAkD,GAA7D;AACA,WAAKuB,QAAL,CAAc;AACZtB,QAAAA,IAAI,EAAE;AACJC,UAAAA,CAAC,EAAE,EADC;AAEJC,UAAAA,CAAC,EAAEc,IAAI,CAACO,GAAL,CACDP,IAAI,CAACQ,GAAL,CACE,KAAK1B,KAAL,CAAWE,IAAX,CAAgBE,CAAhB,GAAoBmB,IADtB,EAEE,KAAKd,IAAL,CAAUC,MAAV,CAAiBK,MAAjB,GAA0B,KAAKf,KAAL,CAAWE,IAAX,CAAgBI,MAF5C,CADC,EAKD,CALC,CAFC;AASJD,UAAAA,QAAQ,EAAEkB,IATN;AAUJjB,UAAAA,MAAM,EAAE;AAVJ;AADM,OAAd;AAcH,KA1C4B;AAAA;;AA4C7BqB,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKN,MAAL;AACA,WAAKf,IAAL;AACH,KAHU,EAGR,OAAO,EAHC,CAAX;AAIH;;AAEGsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACE;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAiC,QAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAzDwB;;AA4D7B,eAAe9B,IAAf","sourcesContent":["import React, { Component } from 'react';\nclass Game extends Component {\n    state = {\n        gravity: 0.8,\n        bird: {\n            x: 50,\n            y: 250,\n            velocity: 0,\n            radius: 40\n        }\n    }\n\ndraw = () => {\n    const ctx = this.refs.canvas.getContext(\"2d\");\n    // change this colour to change the colour of your \n    // \"pen\" in the canvas \n    ctx.fillStyle = \"pink\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, this.refs.canvas.width,   \n        this.refs.canvas.height);     \n    ctx.beginPath();\n    ctx.arc(this.state.bird.x, this.state.bird.y,                        \n            this.state.bird.radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n}\n\nupdate = () => {\n    let newV = (this.state.bird.velocity + this.state.gravity) * 0.9\n    this.setState({\n      bird: {\n        x: 50,\n        y: Math.max(\n          Math.min(\n            this.state.bird.y + newV,\n            this.refs.canvas.height - this.state.bird.radius\n          ),\n          0\n        ),\n        velocity: newV,\n        radius: 20\n      }\n    });\n}\n\ncomponentDidMount() {\n    setInterval(() => {\n        this.update();\n        this.draw();\n    }, 1000 / 60);\n}\n\n    render() {\n        return (\n            <div> \n              <canvas ref=\"canvas\" width={450} height={650} />\n           </div>\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}