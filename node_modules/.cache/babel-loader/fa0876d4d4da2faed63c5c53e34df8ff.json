{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lteresaheidt/Desktop/Code/bird_game/bird-game/src/Game.js\";\nimport React, { Component } from 'react';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gravity: 0.8,\n      lift: -15,\n      bird: {\n        x: 50,\n        y: 100,\n        verocity: 0,\n        radius: 20\n      }\n    };\n\n    this.draw = () => {\n      const ctx = this.refs.canvas.getContext(\"2d\"); // change this colour to change the colour of your \n      // \"pen\" in the canvas \n\n      ctx.fillStyle = \"pink\";\n      ctx.fillStyle = \"white\";\n      ctx.fillRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n      ctx.beginPath();\n      ctx.arc(this.state.bird.x, this.state.bird.y, this.state.bird.radius, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n    };\n\n    this.update = () => {};\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.update();\n      this.draw();\n    }, 1000 / 60);\n    document.addEventListener(\"keydown\", e => e.keyCode === 32 ? this.setState({\n      bird: {\n        x: 50,\n        y: this.state.bird.y,\n        velocity: this.state.bird.velocity + this.state.lift,\n        radius: 20\n      }\n    }) : null);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"canvas\",\n        width: 450,\n        height: 650\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar width, height, center;\nvar points = 10;\nvar smooth = true;\nvar path = new Path();\nvar mousePos = view.center / 2;\nvar pathHeight = mousePos.y;\npath.fillColor = 'black';\ninitializePath();\n\nfunction initializePath() {\n  center = view.center;\n  width = view.size.width;\n  height = view.size.height / 2;\n  path.segments = [];\n  path.add(view.bounds.bottomLeft);\n\n  for (var i = 1; i < points; i++) {\n    var point = new Point(width / points * i, center.y);\n    path.add(point);\n  }\n\n  path.add(view.bounds.bottomRight);\n  path.fullySelected = true;\n}\n\nfunction onFrame(event) {\n  pathHeight += (center.y - mousePos.y - pathHeight) / 10;\n\n  for (var i = 1; i < points; i++) {\n    var sinSeed = event.count + (i + i % 10) * 100;\n    var sinHeight = Math.sin(sinSeed / 200) * pathHeight;\n    var yPos = Math.sin(sinSeed / 100) * sinHeight + height;\n    path.segments[i].point.y = yPos;\n  }\n\n  if (smooth) path.smooth({\n    type: 'continuous'\n  });\n}\n\nfunction onMouseMove(event) {\n  mousePos = event.point;\n}\n\nfunction onMouseDown(event) {\n  smooth = !smooth;\n\n  if (!smooth) {\n    // If smooth has been turned off, we need to reset\n    // the handles of the path:\n    for (var i = 0, l = path.segments.length; i < l; i++) {\n      var segment = path.segments[i];\n      segment.handleIn = segment.handleOut = null;\n    }\n  }\n} // Reposition the path whenever the window is resized:\n\n\nfunction onResize(event) {\n  initializePath();\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/lteresaheidt/Desktop/Code/bird_game/bird-game/src/Game.js"],"names":["React","Component","Game","state","gravity","lift","bird","x","y","verocity","radius","draw","ctx","refs","canvas","getContext","fillStyle","fillRect","width","height","beginPath","arc","Math","PI","fill","stroke","update","componentDidMount","setInterval","document","addEventListener","e","keyCode","setState","velocity","render","center","points","smooth","path","Path","mousePos","view","pathHeight","fillColor","initializePath","size","segments","add","bounds","bottomLeft","i","point","Point","bottomRight","fullySelected","onFrame","event","sinSeed","count","sinHeight","sin","yPos","type","onMouseMove","onMouseDown","l","length","segment","handleIn","handleOut","onResize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Game extends Component {\n    state = {\n        gravity: 0.8,\n        lift: -15,\n        bird: {\n            x: 50,\n            y: 100,\n            verocity: 0,\n            radius: 20\n        }\n    }\n    draw = () => {\n        const ctx = this.refs.canvas.getContext(\"2d\");\n        // change this colour to change the colour of your \n        // \"pen\" in the canvas \n        ctx.fillStyle = \"pink\";\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(0, 0, this.refs.canvas.width,   \n            this.refs.canvas.height);     \n        ctx.beginPath();\n        ctx.arc(this.state.bird.x, this.state.bird.y,                        \n                this.state.bird.radius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n    }\n    update = () => {\n        \n\n    }\n    componentDidMount() {\n        setInterval(() => {\n            this.update();\n            this.draw();\n        }, 1000 / 60);\n        document.addEventListener(\"keydown\", e =>\n      e.keyCode === 32 ? this.setState({ \n        bird: {\n          x: 50,\n          y: this.state.bird.y,\n          velocity: this.state.bird.velocity + this.state.lift,\n          radius: 20\n          }\n        }) : null\n    );\n    }\n\n    render() {\n        return (\n            <div> \n              <canvas ref=\"canvas\" width={450} height={650} />\n           </div>\n        );\n    }\n}\n\nvar width, height, center;\nvar points = 10;\nvar smooth = true;\nvar path = new Path();\nvar mousePos = view.center / 2;\nvar pathHeight = mousePos.y;\npath.fillColor = 'black';\ninitializePath();\n\nfunction initializePath() {\n\tcenter = view.center;\n\twidth = view.size.width;\n\theight = view.size.height / 2;\n\tpath.segments = [];\n\tpath.add(view.bounds.bottomLeft);\n\tfor (var i = 1; i < points; i++) {\n\t\tvar point = new Point(width / points * i, center.y);\n\t\tpath.add(point);\n\t}\n\tpath.add(view.bounds.bottomRight);\n\tpath.fullySelected = true;\n}\n\nfunction onFrame(event) {\n\tpathHeight += (center.y - mousePos.y - pathHeight) / 10;\n\tfor (var i = 1; i < points; i++) {\n\t\tvar sinSeed = event.count + (i + i % 10) * 100;\n\t\tvar sinHeight = Math.sin(sinSeed / 200) * pathHeight;\n\t\tvar yPos = Math.sin(sinSeed / 100) * sinHeight + height;\n\t\tpath.segments[i].point.y = yPos;\n\t}\n\tif (smooth)\n\t\tpath.smooth({ type: 'continuous' });\n}\n\nfunction onMouseMove(event) {\n\tmousePos = event.point;\n}\n\nfunction onMouseDown(event) {\n\tsmooth = !smooth;\n\tif (!smooth) {\n\t\t// If smooth has been turned off, we need to reset\n\t\t// the handles of the path:\n\t\tfor (var i = 0, l = path.segments.length; i < l; i++) {\n\t\t\tvar segment = path.segments[i];\n\t\t\tsegment.handleIn = segment.handleOut = null;\n\t\t}\n\t}\n}\n\n// Reposition the path whenever the window is resized:\nfunction onResize(event) {\n\tinitializePath();\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}