{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lteresaheidt/Desktop/Code/bird_game/bird-game/src/Game.js\";\nimport React, { Component } from 'react';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.draw = () => {\n      const ctx = this.refs.canvas.getContext(\"2d\"); // change this colour to change the colour of your \n      // \"pen\" in the canvas \n\n      ctx.fillStyle = \"green\";\n      ctx.beginPath();\n      ctx.arc(this.state.bird.x, this.state.bird.y, this.state.bird.radius, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n    };\n\n    this.update = () => {\n      let newV = (this.state.bird.velocity + this.state.gravity) * 0.9;\n      this.setState({\n        bird: {\n          x: 50,\n          y: Math.max(Math.min(this.state.bird.y + newV, this.refs.canvas.height - this.state.bird.radius), 0),\n          velocity: newV,\n          radius: 20\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.update();\n      this.draw();\n    }, 1000 / 60);\n    document.addEventListener(\"keydown\", e => e.keyCode === 32 ? this.setState({\n      bird: {\n        x: 50,\n        y: this.state.bird.y,\n        velocity: this.state.bird.velocity + this.state.lift,\n        radius: 20\n      }\n    }) : null);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: \"canvas\",\n        width: 450,\n        height: 650\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/lteresaheidt/Desktop/Code/bird_game/bird-game/src/Game.js"],"names":["React","Component","Game","draw","ctx","refs","canvas","getContext","fillStyle","beginPath","arc","state","bird","x","y","radius","Math","PI","fill","stroke","update","newV","velocity","gravity","setState","max","min","height","componentDidMount","setInterval","document","addEventListener","e","keyCode","lift","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAEzBE,IAFyB,GAElB,MAAM;AACT,YAAMC,GAAG,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,UAAjB,CAA4B,IAA5B,CAAZ,CADS,CAET;AACA;;AACAH,MAAAA,GAAG,CAACI,SAAJ,GAAgB,OAAhB;AACAJ,MAAAA,GAAG,CAACK,SAAJ;AACAL,MAAAA,GAAG,CAACM,GAAJ,CAAQ,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,CAAxB,EAA2B,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,CAA3C,EACQ,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,MADxB,EACgC,CADhC,EACmC,IAAIC,IAAI,CAACC,EAD5C;AAEAb,MAAAA,GAAG,CAACc,IAAJ;AACAd,MAAAA,GAAG,CAACe,MAAJ;AACH,KAZwB;;AAAA,SAazBC,MAbyB,GAahB,MAAM;AACX,UAAIC,IAAI,GAAG,CAAC,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,QAAhB,GAA2B,KAAKX,KAAL,CAAWY,OAAvC,IAAkD,GAA7D;AACJ,WAAKC,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAE;AACJC,UAAAA,CAAC,EAAE,EADC;AAEJC,UAAAA,CAAC,EAAEE,IAAI,CAACS,GAAL,CACDT,IAAI,CAACU,GAAL,CACE,KAAKf,KAAL,CAAWC,IAAX,CAAgBE,CAAhB,GAAoBO,IADtB,EAEE,KAAKhB,IAAL,CAAUC,MAAV,CAAiBqB,MAAjB,GAA0B,KAAKhB,KAAL,CAAWC,IAAX,CAAgBG,MAF5C,CADC,EAKD,CALC,CAFC;AASJO,UAAAA,QAAQ,EAAED,IATN;AAUJN,UAAAA,MAAM,EAAE;AAVJ;AADM,OAAd;AAgBC,KA/BwB;AAAA;;AAgCzBa,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKT,MAAL;AACA,WAAKjB,IAAL;AACH,KAHU,EAGR,OAAO,EAHC,CAAX;AAIA2B,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,CAAC,IACxCA,CAAC,CAACC,OAAF,KAAc,EAAd,GAAmB,KAAKT,QAAL,CAAc;AAC/BZ,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAE,EADC;AAEJC,QAAAA,CAAC,EAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBE,CAFf;AAGJQ,QAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,IAAX,CAAgBU,QAAhB,GAA2B,KAAKX,KAAL,CAAWuB,IAH5C;AAIJnB,QAAAA,MAAM,EAAE;AAJJ;AADyB,KAAd,CAAnB,GAOO,IARL;AAUH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACE;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAiC,QAAA,MAAM,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAvDwB;;AA0D7B,eAAejC,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Game extends Component {\n\n    draw = () => {\n        const ctx = this.refs.canvas.getContext(\"2d\");\n        // change this colour to change the colour of your \n        // \"pen\" in the canvas \n        ctx.fillStyle = \"green\";   \n        ctx.beginPath();\n        ctx.arc(this.state.bird.x, this.state.bird.y,                        \n                this.state.bird.radius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n    }\n    update = () => {\n        let newV = (this.state.bird.velocity + this.state.gravity) * 0.9\n    this.setState({\n      bird: {\n        x: 50,\n        y: Math.max(\n          Math.min(\n            this.state.bird.y + newV,\n            this.refs.canvas.height - this.state.bird.radius\n          ),\n          0\n        ),\n        velocity: newV,\n        radius: 20\n      }\n    });\n        \n\n    }\n    componentDidMount() {\n        setInterval(() => {\n            this.update();\n            this.draw();\n        }, 1000 / 60);\n        document.addEventListener(\"keydown\", e =>\n      e.keyCode === 32 ? this.setState({ \n        bird: {\n          x: 50,\n          y: this.state.bird.y,\n          velocity: this.state.bird.velocity + this.state.lift,\n          radius: 20\n          }\n        }) : null\n    );\n    }\n\n    render() {\n        return (\n            <div> \n              <canvas ref=\"canvas\" width={450} height={650} />\n           </div>\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}